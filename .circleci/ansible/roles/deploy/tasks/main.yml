---
- name: "Create Backend app directory"
  file:
    path: ~/backend-app
    state: directory

- name: "Unarchive backend files"
  unarchive:
    src: artifact.tar.gz
    dest: ~/backend-app

- name: "Installing Node dependencies"
  shell: |
    cd ~/backend-app
    npm i
- name: "Executing Node app with PM2"
  shell: |
    cd ~/backend-app/dist

    cd ../
    npm install

    npm run build

    sudo npm install forever -g
    sudo npm install ts-node -g
    forever start -c "ts-node -r tsconfig-paths/register -r dotenv/config src/main.ts" ./

  register: execute_node

- name: print message
  debug:
    msg: "{{ execute_node.stdout_lines }}"

- name: "Configure pm2 to start as service"
  become: true
  shell: |
    env PATH=$PATH:/usr/local/bin pm2 startup systemd -u ubuntu --hp /home/ubuntu





#######################ANOTHER TRANSITION#################################3
# ---
# - name: install rsync on the ansible controller
#   become: yes
#   connection: local
#   package:
#     name: 
#       - openssh
#       - rsync
#     state: present
# - name: "show remote environment"
#   shell: env

# - name: "copy backend binaries"
#   become: yes
#   synchronize:
#     src: ../../backend/dist
#     dest: udapeople_app
#     recursive: true

# - name: "copy node_modules"
#   become: yes
#   synchronize:
#     src: ../../backend/node_modules
#     dest: udapeople_app
#     recursive: true

# - name: "delete anything that might already be running"
#   become: true
#   command: pm2 delete all
#   ignore_errors: true

# - name: "start server"
#   become: true
#   command: pm2 start -f ./main.js
#   args:
#     chdir: udapeople_app/dist


#   environment:
#      ENVIRONMENT: production
#      VERSION: "1"
#      TYPEORM_CONNECTION: "{{ lookup('env', 'TYPEORM_CONNECTION') }}"
#      TYPEORM_MIGRATIONS_DIR: "./migrations"
#      TYPEORM_MIGRATIONS: "./migrations/*.js"
#      TYPEORM_ENTITIES: "./modules/domain/**/*.entity.js"
#      TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST') }}"
#      TYPEORM_PORT: "{{ lookup('env', 'TYPEORM_PORT') }}"
#      TYPEORM_USERNAME: "{{ lookup('env', 'TYPEORM_USERNAME') }}"
#      TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD') }}"
#      TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE') }}" 
 
#   # - name: install rsync on the ansible controller
#   #   become: yes
#   #   connection: local
#   #   package:
#   #     name: 
#   #       - openssh
#   #       - rsync
#   #     state: present
      
#   # - name: "extract artifact"
#   #   become: yes 
#   #   unarchive:
#   #     src: files/artifact.tar.gz
#   #     dest: .

#   # - name: "run server"
#   #   become: true
#   #   shell : |
#   #       cd /home/ubuntu/
#   #       npm install
#   #       pm2 stop default
#   #       pm2 start npm -- start
#     # environment:
#     #   ENVIRONMENT: production
#     #   TYPEORM_CONNECTION: "{{ lookup('env', 'TYPEORM_CONNECTION') }}"
#     #   TYPEORM_MIGRATIONS_DIR: "./migrations"
#     #   TYPEORM_MIGRATIONS: "./migrations/*.js"
#     #   TYPEORM_ENTITIES: "./modules/domain/**/*.entity.js"
#     #   TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST') }}"
#     #   TYPEORM_PORT: "{{ lookup('env', 'TYPEORM_PORT') }}"
#     #   TYPEORM_USERNAME: "{{ lookup('env', 'TYPEORM_USERNAME') }}"
#     #   TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD') }}"
#     #   TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE') }}"